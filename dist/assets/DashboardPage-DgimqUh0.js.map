{"version":3,"file":"DashboardPage-DgimqUh0.js","sources":["../../node_modules/lucide-react/dist/esm/icons/link-2.js","../../node_modules/lucide-react/dist/esm/icons/package.js","../../node_modules/lucide-react/dist/esm/icons/trending-up.js","../../src/store/tasksStore.ts","../../src/store/financeStore.ts","../../src/pages/DashboardPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M9 17H7A5 5 0 0 1 7 7h2\", key: \"8i5ue5\" }],\n  [\"path\", { d: \"M15 7h2a5 5 0 1 1 0 10h-2\", key: \"1b9ql8\" }],\n  [\"line\", { x1: \"8\", x2: \"16\", y1: \"12\", y2: \"12\", key: \"1jonct\" }]\n];\nconst Link2 = createLucideIcon(\"link-2\", __iconNode);\n\nexport { __iconNode, Link2 as default };\n//# sourceMappingURL=link-2.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M11 21.73a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73z\",\n      key: \"1a0edw\"\n    }\n  ],\n  [\"path\", { d: \"M12 22V12\", key: \"d0xqtd\" }],\n  [\"polyline\", { points: \"3.29 7 12 12 20.71 7\", key: \"ousv84\" }],\n  [\"path\", { d: \"m7.5 4.27 9 5.15\", key: \"1c824w\" }]\n];\nconst Package = createLucideIcon(\"package\", __iconNode);\n\nexport { __iconNode, Package as default };\n//# sourceMappingURL=package.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M16 7h6v6\", key: \"box55l\" }],\n  [\"path\", { d: \"m22 7-8.5 8.5-5-5L2 17\", key: \"1t1m79\" }]\n];\nconst TrendingUp = createLucideIcon(\"trending-up\", __iconNode);\n\nexport { __iconNode, TrendingUp as default };\n//# sourceMappingURL=trending-up.js.map\n","import { create } from 'zustand';\nimport { devtools, persist } from 'zustand/middleware';\nimport type { Task, TaskStatus } from '../types';\n\ninterface TasksState {\n  tasks: Task[];\n  selectedTask: Task | null;\n  isLoading: boolean;\n  error: string | null;\n  filter: TaskStatus | 'all';\n\n  // Actions\n  setTasks: (tasks: Task[]) => void;\n  addTask: (task: Task) => void;\n  updateTask: (id: number, task: Partial<Task>) => void;\n  removeTask: (id: number) => void;\n  selectTask: (task: Task | null) => void;\n  setFilter: (filter: TaskStatus | 'all') => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  clearTasks: () => void;\n\n  // Computed\n  getTasksByStatus: (status: TaskStatus) => Task[];\n  getFilteredTasks: () => Task[];\n}\n\nexport const useTasksStore = create<TasksState>()(\n  devtools(\n    persist(\n      (set, get) => ({\n        tasks: [],\n        selectedTask: null,\n        isLoading: false,\n        error: null,\n        filter: 'all',\n\n        setTasks: (tasks) => set({ tasks }),\n\n        addTask: (task) => set((state) => ({ tasks: [...state.tasks, task] })),\n\n        updateTask: (id, updatedTask) =>\n          set((state) => ({\n            tasks: state.tasks.map((task) =>\n              task.id === id ? { ...task, ...updatedTask } : task\n            ),\n          })),\n\n        removeTask: (id) =>\n          set((state) => ({\n            tasks: state.tasks.filter((task) => task.id !== id),\n          })),\n\n        selectTask: (task) => set({ selectedTask: task }),\n\n        setFilter: (filter) => set({ filter }),\n\n        setLoading: (isLoading) => set({ isLoading }),\n\n        setError: (error) => set({ error }),\n\n        clearTasks: () => set({ tasks: [], selectedTask: null }),\n\n        getTasksByStatus: (status) => {\n          return get().tasks.filter((task) => task.status === status);\n        },\n\n        getFilteredTasks: () => {\n          const { tasks, filter } = get();\n          if (filter === 'all') return tasks;\n          return tasks.filter((task) => task.status === filter);\n        },\n      }),\n      {\n        name: 'tasks-storage',\n        partialize: (state) => ({ tasks: state.tasks, filter: state.filter }),\n      }\n    ),\n    { name: 'TasksStore' }\n  )\n);\n","import { create } from 'zustand';\nimport { devtools, persist } from 'zustand/middleware';\nimport type { Expense, TransactionType } from '../types';\n\ninterface FinanceState {\n  expenses: Expense[];\n  selectedExpense: Expense | null;\n  isLoading: boolean;\n  error: string | null;\n  filterType: TransactionType | 'all';\n  dateRange: { start: string | null; end: string | null };\n\n  // Actions\n  setExpenses: (expenses: Expense[]) => void;\n  addExpense: (expense: Expense) => void;\n  updateExpense: (id: number, expense: Partial<Expense>) => void;\n  removeExpense: (id: number) => void;\n  selectExpense: (expense: Expense | null) => void;\n  setFilterType: (filterType: TransactionType | 'all') => void;\n  setDateRange: (start: string | null, end: string | null) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  clearExpenses: () => void;\n\n  // Computed\n  getTotalIncome: () => number;\n  getTotalExpenses: () => number;\n  getBalance: () => number;\n  getFilteredExpenses: () => Expense[];\n}\n\nexport const useFinanceStore = create<FinanceState>()(\n  devtools(\n    persist(\n      (set, get) => ({\n        expenses: [],\n        selectedExpense: null,\n        isLoading: false,\n        error: null,\n        filterType: 'all',\n        dateRange: { start: null, end: null },\n\n        setExpenses: (expenses) => set({ expenses }),\n\n        addExpense: (expense) =>\n          set((state) => ({ expenses: [expense, ...state.expenses] })),\n\n        updateExpense: (id, updatedExpense) =>\n          set((state) => ({\n            expenses: state.expenses.map((expense) =>\n              expense.id === id ? { ...expense, ...updatedExpense } : expense\n            ),\n          })),\n\n        removeExpense: (id) =>\n          set((state) => ({\n            expenses: state.expenses.filter((expense) => expense.id !== id),\n          })),\n\n        selectExpense: (expense) => set({ selectedExpense: expense }),\n\n        setFilterType: (filterType) => set({ filterType }),\n\n        setDateRange: (start, end) => set({ dateRange: { start, end } }),\n\n        setLoading: (isLoading) => set({ isLoading }),\n\n        setError: (error) => set({ error }),\n\n        clearExpenses: () => set({ expenses: [], selectedExpense: null }),\n\n        getTotalIncome: () => {\n          return get()\n            .expenses.filter((e) => e.type === 'income')\n            .reduce((sum, e) => sum + e.amount, 0);\n        },\n\n        getTotalExpenses: () => {\n          return get()\n            .expenses.filter((e) => e.type === 'expense')\n            .reduce((sum, e) => sum + e.amount, 0);\n        },\n\n        getBalance: () => {\n          const { getTotalIncome, getTotalExpenses } = get();\n          return getTotalIncome() - getTotalExpenses();\n        },\n\n        getFilteredExpenses: () => {\n          const { expenses, filterType, dateRange } = get();\n          let filtered = expenses;\n\n          // Filter by type\n          if (filterType !== 'all') {\n            filtered = filtered.filter((e) => e.type === filterType);\n          }\n\n          // Filter by date range\n          if (dateRange.start || dateRange.end) {\n            filtered = filtered.filter((e) => {\n              const expenseDate = new Date(e.date);\n              const start = dateRange.start ? new Date(dateRange.start) : null;\n              const end = dateRange.end ? new Date(dateRange.end) : null;\n\n              if (start && expenseDate < start) return false;\n              if (end && expenseDate > end) return false;\n              return true;\n            });\n          }\n\n          return filtered;\n        },\n      }),\n      {\n        name: 'finance-storage',\n        partialize: (state) => ({\n          expenses: state.expenses,\n          filterType: state.filterType,\n        }),\n      }\n    ),\n    { name: 'FinanceStore' }\n  )\n);\n","import { useEffect } from 'react';\nimport { Box, Grid, Heading, Text, Flex, Stack } from '@chakra-ui/react';\nimport { FileText, Link2, CheckSquare, DollarSign, TrendingUp, Package } from 'lucide-react';\nimport { useNotesStore } from '@store/notesStore';\nimport { useLinksStore } from '@store/linksStore';\nimport { useTasksStore } from '@store/tasksStore';\nimport { useFinanceStore } from '@store/financeStore';\nimport { notesApi, linksApi, tasksApi, expensesApi } from '@services/api';\nimport { Card, CardHeader, CardBody, Badge, LoadingSpinner, Tooltip } from '@components/common';\n\nconst DashboardPage = () => {\n  const { notes, setNotes, setLoading: setNotesLoading } = useNotesStore();\n  const { links, setLinks, setLoading: setLinksLoading } = useLinksStore();\n  const { tasks, setTasks, setLoading: setTasksLoading } = useTasksStore();\n  const { expenses, setExpenses, getBalance } = useFinanceStore();\n  \n  // Get loading states (must be called before any conditional returns)\n  const notesLoading = useNotesStore((s) => s.isLoading);\n  const linksLoading = useLinksStore((s) => s.isLoading);\n  const tasksLoading = useTasksStore((s) => s.isLoading);\n  const isLoading = notesLoading || linksLoading || tasksLoading;\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setNotesLoading(true);\n        setLinksLoading(true);\n        setTasksLoading(true);\n\n        const [notesData, linksData, tasksData, expensesData] = await Promise.all([\n          notesApi.getAll(),\n          linksApi.getAll(),\n          tasksApi.getAll(),\n          expensesApi.getAll(),\n        ]);\n\n        setNotes(notesData);\n        setLinks(linksData);\n        setTasks(tasksData);\n        setExpenses(expensesData);\n      } catch (error) {\n        console.error('Failed to load dashboard data:', error);\n      } finally {\n        setNotesLoading(false);\n        setLinksLoading(false);\n        setTasksLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Calculate derived values\n  const activeTasks = tasks.filter((t) => t.status !== 'completed');\n  const completedTasks = tasks.filter((t) => t.status === 'completed');\n  const balance = getBalance();\n  const totalItems = notes.length + links.length + tasks.length + expenses.length;\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <Flex justify=\"center\" align=\"center\" h=\"400px\">\n        <LoadingSpinner size=\"lg\" label=\"Loading dashboard data...\" />\n      </Flex>\n    );\n  }\n\n  return (\n    <Box>\n      {/* Header */}\n      <Box mb={8}>\n        <Heading size=\"2xl\" mb={2}>\n          Dashboard\n        </Heading>\n        <Text color=\"gray.600\" _dark={{ color: 'gray.400' }} fontSize=\"lg\">\n          Welcome to ProductivePro - Your all-in-one productivity suite\n        </Text>\n      </Box>\n\n      {/* Stats Grid */}\n      <Grid\n        templateColumns={{ base: '1fr', sm: 'repeat(2, 1fr)', lg: 'repeat(4, 1fr)' }}\n        gap={6}\n        mb={8}\n      >\n        <StatCard\n          title=\"Total Notes\"\n          value={notes.length}\n          icon={<FileText size={32} />}\n          colorScheme=\"blue\"\n          trend=\"+12%\"\n        />\n        <StatCard\n          title=\"Active Links\"\n          value={links.length}\n          icon={<Link2 size={32} />}\n          colorScheme=\"purple\"\n          trend=\"+5%\"\n        />\n        <StatCard\n          title=\"Active Tasks\"\n          value={activeTasks.length}\n          icon={<CheckSquare size={32} />}\n          colorScheme=\"orange\"\n          subtitle={`${completedTasks.length} completed`}\n        />\n        <StatCard\n          title=\"Balance\"\n          value={`$${balance.toFixed(2)}`}\n          icon={<DollarSign size={32} />}\n          colorScheme={balance >= 0 ? 'green' : 'red'}\n          trend={balance >= 0 ? '+8%' : '-3%'}\n        />\n      </Grid>\n\n      {/* Quick Stats Card */}\n      <Card variant=\"elevated\">\n        <CardHeader title=\"Quick Stats\">\n          <Flex align=\"center\" gap={2}>\n            <TrendingUp size={24} />\n            <Tooltip label=\"Statistics updated in real-time\">\n              <Badge colorScheme=\"brand\" size=\"sm\">\n                Live\n              </Badge>\n            </Tooltip>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <Stack gap={4}>\n            <Flex justify=\"space-between\" align=\"center\">\n              <Text fontWeight=\"medium\" fontSize=\"lg\">\n                Total Items Tracked\n              </Text>\n              <Badge colorScheme=\"brand\" size=\"lg\">\n                {totalItems}\n              </Badge>\n            </Flex>\n            <Box\n              p={4}\n              bg=\"brand.50\"\n              borderRadius=\"md\"\n              borderLeft=\"4px solid\"\n              borderColor=\"brand.500\"\n              _dark={{\n                bg: 'brand.900',\n                borderColor: 'brand.400',\n              }}\n            >\n              <Text fontSize=\"sm\" fontWeight=\"semibold\" mb={2}>\n                🎉 Phase 2 Complete!\n              </Text>\n              <Text fontSize=\"sm\" color=\"gray.700\" _dark={{ color: 'gray.300' }}>\n                Modern UI component library with Chakra UI v3, TypeScript, and Framer Motion animations is now live!\n              </Text>\n            </Box>\n            <Flex gap={2} flexWrap=\"wrap\">\n              <Badge colorScheme=\"green\" variant=\"subtle\">\n                <Package size={12} style={{ marginRight: '4px', display: 'inline' }} />\n                14 Components Built\n              </Badge>\n              <Badge colorScheme=\"blue\" variant=\"subtle\">\n                ✅ 95% Complete\n              </Badge>\n              <Badge colorScheme=\"purple\" variant=\"subtle\">\n                🎨 Dark Mode\n              </Badge>\n              <Badge colorScheme=\"yellow\" variant=\"subtle\">\n                ⚡ TypeScript\n              </Badge>\n            </Flex>\n          </Stack>\n        </CardBody>\n      </Card>\n    </Box>\n  );\n};\n\ninterface StatCardProps {\n  title: string;\n  value: number | string;\n  icon: React.ReactNode;\n  colorScheme: string;\n  trend?: string;\n  subtitle?: string;\n}\n\nconst StatCard = ({ title, value, icon, colorScheme, trend, subtitle }: StatCardProps) => {\n  const colorMap: Record<string, string> = {\n    blue: 'blue.500',\n    purple: 'purple.500',\n    orange: 'orange.500',\n    green: 'green.500',\n    red: 'red.500',\n  };\n\n  return (\n    <Card variant=\"elevated\" _hover={{ transform: 'translateY(-4px)', shadow: 'xl' }} transition=\"all 0.2s\">\n      <CardBody>\n        <Flex justify=\"space-between\" align=\"flex-start\" mb={4}>\n          <Box>\n            <Text fontSize=\"sm\" fontWeight=\"medium\" color=\"gray.600\" _dark={{ color: 'gray.400' }} mb={1}>\n              {title}\n            </Text>\n            <Heading size=\"2xl\" color={colorMap[colorScheme]} mb={1}>\n              {value}\n            </Heading>\n            {subtitle && (\n              <Text fontSize=\"xs\" color=\"gray.500\" _dark={{ color: 'gray.500' }}>\n                {subtitle}\n              </Text>\n            )}\n          </Box>\n          <Box color={colorMap[colorScheme]} opacity={0.8}>\n            {icon}\n          </Box>\n        </Flex>\n        {trend && (\n          <Flex align=\"center\" gap={1}>\n            <TrendingUp size={14} />\n            <Text fontSize=\"xs\" fontWeight=\"semibold\" color={trend.startsWith('+') ? 'green.600' : 'red.600'}>\n              {trend} from last month\n            </Text>\n          </Flex>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["__iconNode","Link2","createLucideIcon","Package","TrendingUp","useTasksStore","create","devtools","persist","set","get","tasks","task","state","id","updatedTask","filter","isLoading","error","status","useFinanceStore","expenses","expense","updatedExpense","filterType","start","end","sum","e","getTotalIncome","getTotalExpenses","dateRange","filtered","expenseDate","DashboardPage","notes","setNotes","setNotesLoading","useNotesStore","links","setLinks","setLinksLoading","useLinksStore","setTasks","setTasksLoading","setExpenses","getBalance","notesLoading","s","linksLoading","tasksLoading","useEffect","notesData","linksData","tasksData","expensesData","notesApi","linksApi","tasksApi","expensesApi","activeTasks","t","completedTasks","balance","totalItems","jsxDEV","Flex","LoadingSpinner","this","Box","Heading","Text","Grid","StatCard","FileText","CheckSquare","DollarSign","Card","CardHeader","Tooltip","Badge","CardBody","Stack","title","value","icon","colorScheme","trend","subtitle","colorMap"],"mappings":"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","x_google_ignoreList":[0,1,2]}